window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "src", "modulename": "src", "kind": "module", "doc": "<h1 id=\"lvgl-ui-generator-v2\">LVGL UI Generator v2</h1>\n\n<p>A project to generate a user interface using LVGL and capturing a screenshot alongside an annotation file with widget metadata (bounding box).</p>\n\n<p>LVGL UI Generator version 2 is an updated version of the UI generator that uses micropython and corresponding LVGL bindings as a base. This version is more flexible, easier to use and more maintenable than the <a href=\"https://github.com/HackXIt/lvgl_ui_generator\">original version</a>.</p>\n\n<p>It has two modes of operation:</p>\n\n<ul>\n<li><strong>Random mode</strong>: Generates a random UI with a specified number of widgets placed on a white background. It requires a provided list of widget types to randomly choose from.</li>\n<li><strong>Design mode</strong>: Generates a UI based on a provided JSON design file. The design file describes the whole window, including styles, widgets and certain properties. There is a special <code>random</code> widget, which can be used to randomize widget creation in certain areas of the design. This mode is useful in creating more realistic looking user interfaces, as the random mode does not accomodate for styles regarding the containers.</li>\n</ul>\n\n<p>\ud83d\uddce <a href=\"https://hackxit.github.io/lvgl_ui_generator_v2/\">Documentation</a></p>\n\n<h1 id=\"prerequisites-installation\">Prerequisites &amp; Installation</h1>\n\n<p>In order to run the UI generator, you need to compile the micropython binary with the LVGL bindings. To make this process easier, the project has a <code>tasks.py</code> file, which already contains necessary routines via the usage of <a href=\"https://www.pyinvoke.org/\"><code>invoke</code></a>.</p>\n\n<p>To use the <a href=\"https://www.pyinvoke.org/\"><code>invoke</code></a> package, you will need to setup a virtual environment and install the dependencies using the provided <a href=\"pyproject.toml\">poetry project file (<code>pyproject.toml</code>)</a>.</p>\n\n<p>Since <code>lv_micropython</code> is included as a submodule, you will need to initialize the submodules <strong>before</strong> running the build task. </p>\n\n<p>\u26a0\ufe0f <strong>Be aware, that initializing this submodule can take quite a while to complete, due to all the additional source dependencies being downloaded.</strong> _(including unnecessary sources for various MCUs, ports and architectures)_</p>\n\n<p>As of yet, there is no way to speed this up, but it is generally a one-time operation.</p>\n\n<h2 id=\"initializing-the-micropython-submodule\">Initializing the micropython submodule</h2>\n\n<p>Run the following command to initialize the submodule:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>git<span class=\"w\"> </span>submodule<span class=\"w\"> </span>update<span class=\"w\"> </span>--init<span class=\"w\"> </span>--recursive\n</code></pre>\n</div>\n\n<p>Make sure to grab a cup of coffee or tea \u2615, as this operation can take quite a while to complete.</p>\n\n<h2 id=\"setting-up-the-virtual-environment\">Setting up the virtual environment</h2>\n\n<ol>\n<li>Install <code>poetry</code> package manager. See corresponding <a href=\"https://python-poetry.org/docs/#installation\">documentation</a> for more information.</li>\n<li>Run <code>poetry install</code> to install the dependencies.</li>\n</ol>\n\n<h2 id=\"compiling-the-micropython-binary\">Compiling the micropython binary</h2>\n\n<p>Run <code>poetry run invoke build</code> to compile the micropython binary with the LVGL bindings, using the provided <code>lv_conf.h</code> file.</p>\n\n<p><details>\n<summary>Example build output</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>$<span class=\"w\"> </span>poetry<span class=\"w\"> </span>run<span class=\"w\"> </span>inv<span class=\"w\"> </span>build\nmake:<span class=\"w\"> </span>Entering<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/mpy-cross&#39;</span>\nUse<span class=\"w\"> </span>make<span class=\"w\"> </span><span class=\"nv\">V</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"w\"> </span>or<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>BUILD_VERBOSE<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>your<span class=\"w\"> </span>environment<span class=\"w\"> </span>to<span class=\"w\"> </span>increase<span class=\"w\"> </span>build<span class=\"w\"> </span>verbosity.\nGEN<span class=\"w\"> </span>build/genhdr/mpversion.h\nCC<span class=\"w\"> </span>../py/modsys.c\nCC<span class=\"w\"> </span>main.c\nLINK<span class=\"w\"> </span>build/mpy-cross\n<span class=\"w\">   </span>text<span class=\"w\">    </span>data<span class=\"w\">     </span>bss<span class=\"w\">     </span>dec<span class=\"w\">     </span>hex<span class=\"w\"> </span>filename\n<span class=\"w\"> </span><span class=\"m\">305806</span><span class=\"w\">   </span><span class=\"m\">13856</span><span class=\"w\">     </span><span class=\"m\">856</span><span class=\"w\">  </span><span class=\"m\">320518</span><span class=\"w\">   </span>4e406<span class=\"w\"> </span>build/mpy-cross\nmake:<span class=\"w\"> </span>Leaving<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/mpy-cross&#39;</span>\nmake:<span class=\"w\"> </span>Entering<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/ports/unix&#39;</span>\nUse<span class=\"w\"> </span>make<span class=\"w\"> </span><span class=\"nv\">V</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"w\"> </span>or<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>BUILD_VERBOSE<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>your<span class=\"w\"> </span>environment<span class=\"w\"> </span>to<span class=\"w\"> </span>increase<span class=\"w\"> </span>build<span class=\"w\"> </span>verbosity.\nUpdating<span class=\"w\"> </span>submodules:<span class=\"w\"> </span>lib/mbedtls<span class=\"w\"> </span>lib/berkeley-db-1.xx<span class=\"w\"> </span>lib/micropython-lib\nSynchronizing<span class=\"w\"> </span>submodule<span class=\"w\"> </span>url<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">&#39;../../lib/berkeley-db-1.xx&#39;</span>\nSynchronizing<span class=\"w\"> </span>submodule<span class=\"w\"> </span>url<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">&#39;../../lib/mbedtls&#39;</span>\nSynchronizing<span class=\"w\"> </span>submodule<span class=\"w\"> </span>url<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"s1\">&#39;../../lib/micropython-lib&#39;</span>\nmake:<span class=\"w\"> </span>Leaving<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/ports/unix&#39;</span>\nmake:<span class=\"w\"> </span>Entering<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/ports/unix&#39;</span>\nUse<span class=\"w\"> </span>make<span class=\"w\"> </span><span class=\"nv\">V</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"w\"> </span>or<span class=\"w\"> </span><span class=\"nb\">set</span><span class=\"w\"> </span>BUILD_VERBOSE<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>your<span class=\"w\"> </span>environment<span class=\"w\"> </span>to<span class=\"w\"> </span>increase<span class=\"w\"> </span>build<span class=\"w\"> </span>verbosity.\nLVGL-GEN<span class=\"w\"> </span>build-standard/lvgl/lv_mpy.c\nGEN<span class=\"w\"> </span>build-standard/genhdr/mpversion.h\nGEN<span class=\"w\"> </span>build-standard/genhdr/qstr.i.last\nGEN<span class=\"w\"> </span>build-standard/genhdr/qstr.split\nGEN<span class=\"w\"> </span>build-standard/genhdr/moduledefs.split\nGEN<span class=\"w\"> </span>build-standard/genhdr/root_pointers.split\nGEN<span class=\"w\"> </span>build-standard/genhdr/compressed.split\nGEN<span class=\"w\"> </span>build-standard/genhdr/root_pointers.collected\nGEN<span class=\"w\"> </span>build-standard/genhdr/qstrdefs.collected.h\nGEN<span class=\"w\"> </span>build-standard/genhdr/moduledefs.collected\nRoot<span class=\"w\"> </span>pointer<span class=\"w\"> </span>registrations<span class=\"w\"> </span>not<span class=\"w\"> </span>updated\nGEN<span class=\"w\"> </span>build-standard/genhdr/compressed.collected\nModule<span class=\"w\"> </span>registrations<span class=\"w\"> </span>not<span class=\"w\"> </span>updated\nQSTR<span class=\"w\"> </span>not<span class=\"w\"> </span>updated\nCompressed<span class=\"w\"> </span>data<span class=\"w\"> </span>not<span class=\"w\"> </span>updated\nCC<span class=\"w\"> </span>../../py/modsys.c\nCC<span class=\"w\"> </span>../../extmod/moduplatform.c\nCC<span class=\"w\"> </span>build-standard/lvgl/lv_mpy.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/evdev/lv_evdev.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/windows/lv_windows_input.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/windows/lv_windows_display.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/windows/lv_windows_context.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/st7735/lv_st7735.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/fb/lv_linux_fbdev.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/ili9341/lv_ili9341.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/drm/lv_linux_drm.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/st7796/lv_st7796.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/st7789/lv_st7789.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/display/lcd/lv_lcd_generic_mipi.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_lcd.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_libuv.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_fbdev.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_entry.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_profiler.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_touchscreen.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/nuttx/lv_nuttx_cache.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/x11/lv_x11_display.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/x11/lv_x11_input.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/sdl/lv_sdl_window.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/sdl/lv_sdl_mouse.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/sdl/lv_sdl_keyboard.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/drivers/sdl/lv_sdl_mousewheel.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/themes/default/lv_theme_default.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/themes/lv_theme.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/themes/simple/lv_theme_simple.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/themes/mono/lv_theme_mono.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/tick/lv_tick.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/lv_init.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_pthread.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_cmsis_rtos2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_windows.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_os_none.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_rtthread.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/osal/lv_freertos.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_class.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_id_builtin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_scroll.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_style.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_event.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_refr.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_group.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_pos.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_style_gen.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_tree.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_property.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/core/lv_obj_draw.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/sysmon/lv_sysmon.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/imgfont/lv_imgfont.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/file_explorer/lv_file_explorer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/observer/lv_observer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/snapshot/lv_snapshot.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/monkey/lv_monkey.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/fragment/lv_fragment.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/fragment/lv_fragment_manager.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/gridnav/lv_gridnav.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/ime/lv_ime_pinyin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/others/vg_lite_tvg/vg_lite_matrix.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/rtthread/lv_string_rtthread.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/rtthread/lv_sprintf_rtthread.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/rtthread/lv_mem_core_rtthread.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/lv_mem.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/clib/lv_string_clib.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/clib/lv_mem_core_clib.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/clib/lv_sprintf_clib.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/micropython/lv_mem_core_micropython.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/builtin/lv_sprintf_builtin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/builtin/lv_tlsf.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/builtin/lv_mem_core_builtin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/stdlib/builtin/lv_string_builtin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/cache/lv_cache_entry.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/cache/lv_image_cache.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/cache/_lv_cache_lru_rb.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/cache/lv_cache.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_profiler_builtin.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_color_op.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_color.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_text.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_bidi.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_style_gen.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_async.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_palette.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_style.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_text_ap.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_array.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_lru.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_anim.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_rb.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_math.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_fs.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_timer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_log.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_event.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_ll.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_area.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/misc/lv_anim_timeline.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/layouts/flex/lv_flex.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/layouts/grid/lv_grid.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/layouts/lv_layout.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/fsdrv/lv_fs_stdio.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/fsdrv/lv_fs_memfs.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/fsdrv/lv_fs_fatfs.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/fsdrv/lv_fs_posix.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/fsdrv/lv_fs_win32.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/bin_decoder/lv_bin_decoder.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/rlottie/lv_rlottie.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/libpng/lv_libpng.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/tiny_ttf/lv_tiny_ttf.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/barcode/code128.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/barcode/lv_barcode.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/rle/lv_rle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/lz4/lz4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/bmp/lv_bmp.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/lodepng/lv_lodepng.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/lodepng/lodepng.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/tjpgd/lv_tjpgd.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/gif/gifdec.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/gif/lv_gif.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/qrcode/qrcodegen.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/qrcode/lv_qrcode.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/freetype/lv_freetype_glyph.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/freetype/lv_freetype_image.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/freetype/lv_ftsystem.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/freetype/lv_freetype_outline.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/freetype/lv_freetype.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/libjpeg_turbo/lv_libjpeg_turbo.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/libs/ffmpeg/lv_ffmpeg.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/display/lv_display.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_8.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_20.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_30.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_44.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_18.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_unscii_8.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_simsun_16_cjk.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_38.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_22.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_fmt_txt.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_32.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_dejavu_16_persian_hebrew.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_binfont_loader.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_28.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_42.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_unscii_16.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_28_compressed.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_36.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_40.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_26.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_34.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_16.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_24.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_48.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_46.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_12.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_14.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/font/lv_font_montserrat_10.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_image.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_triangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_label.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_mask_rect.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_box_shadow.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_gradient.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_mask.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_triangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_transform.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_letter.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/blend/lv_draw_sw_blend_to_argb8888.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/blend/lv_draw_sw_blend.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/blend/lv_draw_sw_blend_to_rgb888.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/blend/lv_draw_sw_blend_to_rgb565.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_vector.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_border.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_fill.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sw/lv_draw_sw_img.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_image_decoder.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_vector.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_rect.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_border.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_label.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_fill.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_triangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_mask_rectangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_utils.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/renesas/dave2d/lv_draw_dave2d_image.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_mask.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_draw_pxp_img.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_draw_pxp_layer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_pxp_osa.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_pxp_cfg.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_draw_buf_pxp.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_draw_pxp.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_draw_pxp_fill.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/pxp/lv_pxp_utils.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_fill.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_vglite_path.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_border.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_buf_vglite.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_img.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_layer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_vglite_utils.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_vglite_matrix.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_vglite_buf.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_triangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/nxp/vglite/lv_draw_vglite_label.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw_buf.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_image_buf.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/sdl/lv_draw_sdl.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_vg_lite_utils.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_mask_rect.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_layer.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_border.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_buf_vg_lite.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_img.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_vg_lite_path.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_label.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_vg_lite_decoder.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_box_shadow.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_fill.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_vector.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_draw_vg_lite_triangle.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/vg_lite/lv_vg_lite_math.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/draw/lv_draw.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/indev/lv_indev.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/indev/lv_indev_scroll.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/dropdown/lv_dropdown.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/arc/lv_arc.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/keyboard/lv_keyboard.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/line/lv_line.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/scale/lv_scale.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/switch/lv_switch.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/animimage/lv_animimage.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/slider/lv_slider.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/canvas/lv_canvas.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/button/lv_button.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/checkbox/lv_checkbox.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/span/lv_span.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/spinner/lv_spinner.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/imagebutton/lv_imagebutton.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/roller/lv_roller.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/tabview/lv_tabview.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/label/lv_label.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/menu/lv_menu.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/textarea/lv_textarea.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/tileview/lv_tileview.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/image/lv_image.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/bar/lv_bar.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/buttonmatrix/lv_buttonmatrix.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/chart/lv_chart.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/msgbox/lv_msgbox.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/list/lv_list.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/spinbox/lv_spinbox.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/win/lv_win.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/calendar/lv_calendar_header_arrow.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/calendar/lv_calendar_header_dropdown.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/calendar/lv_calendar.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/led/lv_led.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/src/widgets/table/lv_table.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/anim/lv_example_anim_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/anim/lv_example_anim_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/anim/lv_example_anim_timeline_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/anim/lv_example_anim_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/imgfont/lv_example_imgfont_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/file_explorer/lv_example_file_explorer_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/file_explorer/lv_example_file_explorer_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/file_explorer/lv_example_file_explorer_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/observer/lv_example_observer_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/snapshot/lv_example_snapshot_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/monkey/lv_example_monkey_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/monkey/lv_example_monkey_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/monkey/lv_example_monkey_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/fragment/lv_example_fragment_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/fragment/lv_example_fragment_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/gridnav/lv_example_gridnav_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/gridnav/lv_example_gridnav_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/gridnav/lv_example_gridnav_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/gridnav/lv_example_gridnav_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/ime/lv_example_ime_pinyin_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/others/ime/lv_example_ime_pinyin_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_8.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_11.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_9.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_13.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_12.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_10.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_14.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_15.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_7.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/styles/lv_example_style_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_star.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/imgbtn_mid.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_hand.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_caret_down.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/animimg002.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_skew_strip.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_cogwheel_rgb.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/animimg001.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/imgbtn_right.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/animimg003.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/imgbtn_left.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/emoji/img_emoji_F617.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_cogwheel_indexed16.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/assets/img_cogwheel_argb.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/scroll/lv_example_scroll_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/flex/lv_example_flex_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/layouts/grid/lv_example_grid_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/rlottie/lv_example_rlottie_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/rlottie/lv_example_rlottie_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/rlottie/lv_example_rlottie_approve.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/libpng/lv_example_libpng_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/tiny_ttf/lv_example_tiny_ttf_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/tiny_ttf/lv_example_tiny_ttf_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/tiny_ttf/ubuntu_font.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/tiny_ttf/lv_example_tiny_ttf_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/barcode/lv_example_barcode_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/bmp/lv_example_bmp_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/lodepng/lv_example_lodepng_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/lodepng/img_wink_png.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/tjpgd/lv_example_tjpgd_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/gif/img_bulb_gif.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/gif/lv_example_gif_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/qrcode/lv_example_qrcode_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/freetype/lv_example_freetype_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/libjpeg_turbo/lv_example_libjpeg_turbo_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/ffmpeg/lv_example_ffmpeg_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/libs/ffmpeg/lv_example_ffmpeg_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/get_started/lv_example_get_started_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/get_started/lv_example_get_started_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/get_started/lv_example_get_started_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/get_started/lv_example_get_started_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/event/lv_example_event_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/event/lv_example_event_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/event/lv_example_event_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/event/lv_example_event_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/dropdown/lv_example_dropdown_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/dropdown/lv_example_dropdown_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/dropdown/lv_example_dropdown_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/arc/lv_example_arc_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/arc/lv_example_arc_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/keyboard/lv_example_keyboard_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/keyboard/lv_example_keyboard_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/line/lv_example_line_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/scale/lv_example_scale_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/scale/lv_example_scale_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/scale/lv_example_scale_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/scale/lv_example_scale_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/scale/lv_example_scale_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/switch/lv_example_switch_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/slider/lv_example_slider_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/slider/lv_example_slider_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/slider/lv_example_slider_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/slider/lv_example_slider_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_7.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_8.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/canvas/lv_example_canvas_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/button/lv_example_button_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/button/lv_example_button_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/button/lv_example_button_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/checkbox/lv_example_checkbox_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/checkbox/lv_example_checkbox_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/span/lv_example_span_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/spinner/lv_example_spinner_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/imagebutton/lv_example_imagebutton_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/roller/lv_example_roller_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/roller/lv_example_roller_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/roller/lv_example_roller_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/tabview/lv_example_tabview_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/tabview/lv_example_tabview_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/label/lv_example_label_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/label/lv_example_label_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/label/lv_example_label_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/label/lv_example_label_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/label/lv_example_label_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/menu/lv_example_menu_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/menu/lv_example_menu_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/menu/lv_example_menu_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/menu/lv_example_menu_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/menu/lv_example_menu_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/textarea/lv_example_textarea_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/textarea/lv_example_textarea_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/textarea/lv_example_textarea_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/animimg/lv_example_animimg_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/tileview/lv_example_tileview_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/image/lv_example_image_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/image/lv_example_image_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/image/lv_example_image_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/image/lv_example_image_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/obj/lv_example_obj_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/obj/lv_example_obj_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/bar/lv_example_bar_7.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/buttonmatrix/lv_example_buttonmatrix_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/buttonmatrix/lv_example_buttonmatrix_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/buttonmatrix/lv_example_buttonmatrix_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_6.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_3.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_5.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_4.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_7.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/chart/lv_example_chart_8.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/msgbox/lv_example_msgbox_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/list/lv_example_list_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/list/lv_example_list_2.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/spinbox/lv_example_spinbox_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/win/lv_example_win_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/calendar/lv_example_calendar_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/led/lv_example_led_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/table/lv_example_table_1.c\nCC<span class=\"w\"> </span>../../lib/lv_bindings/lvgl/examples/widgets/table/lv_example_table_2.c\nCC<span class=\"w\"> </span>main.c\nLINK<span class=\"w\"> </span>build-standard/micropython\n<span class=\"w\">   </span>text<span class=\"w\">    </span>data<span class=\"w\">     </span>bss<span class=\"w\">     </span>dec<span class=\"w\">     </span>hex<span class=\"w\"> </span>filename\n<span class=\"m\">1741466</span><span class=\"w\">  </span><span class=\"m\">225840</span><span class=\"w\">    </span><span class=\"m\">7472</span><span class=\"w\"> </span><span class=\"m\">1974778</span><span class=\"w\">  </span>1e21fa<span class=\"w\"> </span>build-standard/micropython\nmake:<span class=\"w\"> </span>Leaving<span class=\"w\"> </span>directory<span class=\"w\"> </span><span class=\"s1\">&#39;/home/rini-debian/git-stash/lvgl-ui-detector/lvgl_ui_generator_v2/lv_micropython/ports/unix&#39;</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<h1 id=\"usage\">Usage</h1>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>usage:<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span><span class=\"o\">[</span>-h<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-m,<span class=\"w\"> </span>--mode<span class=\"w\"> </span>mode<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-?,<span class=\"w\"> </span>--usage<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-n,<span class=\"w\"> </span>--normalize<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"o\">]</span>\n\nProcess<span class=\"w\"> </span>CLI<span class=\"w\"> </span>arguments<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>the<span class=\"w\"> </span>UI<span class=\"w\"> </span>generator.\n\noptional<span class=\"w\"> </span>args:\n<span class=\"w\">  </span>-h,<span class=\"w\"> </span>--help<span class=\"w\">                        </span>show<span class=\"w\"> </span>this<span class=\"w\"> </span>message<span class=\"w\"> </span>and<span class=\"w\"> </span><span class=\"nb\">exit</span>\n<span class=\"w\">  </span>-m,<span class=\"w\"> </span>--mode<span class=\"w\"> </span>mode<span class=\"w\">                   </span>the<span class=\"w\"> </span>mode<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>the<span class=\"w\"> </span>program<span class=\"w\"> </span><span class=\"k\">in</span>\n<span class=\"w\">  </span>-?,<span class=\"w\"> </span>--usage<span class=\"w\">                       </span>Print<span class=\"w\"> </span>usage<span class=\"w\"> </span>information<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>that<span class=\"w\"> </span>mode.\n<span class=\"w\">  </span>-n,<span class=\"w\"> </span>--normalize<span class=\"w\">                   </span>normalize<span class=\"w\"> </span>the<span class=\"w\"> </span>bounding<span class=\"w\"> </span>boxes\n<span class=\"w\">  </span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"w\">     </span>The<span class=\"w\"> </span>output<span class=\"w\"> </span>file<span class=\"w\"> </span><span class=\"o\">(</span>screenshot<span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"tldr\">TL;DR</h2>\n\n<p>To quickly generate a user interface without prior knowledge of the CLI, use the following commands to copy &amp; paste:</p>\n\n<h3 id=\"random-mode\">Random mode</h3>\n\n<p>Run via <code>invoke</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>poetry<span class=\"w\"> </span>run<span class=\"w\"> </span>invoke<span class=\"w\"> </span>generate-random\n</code></pre>\n</div>\n\n<p>or via <code>poetry</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>poetry<span class=\"w\"> </span>run<span class=\"w\"> </span>micropython<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span>-m<span class=\"w\"> </span>random<span class=\"w\"> </span>--normalize<span class=\"w\"> </span>-o<span class=\"w\"> </span>screenshot.jpg<span class=\"w\"> </span>-W<span class=\"w\"> </span><span class=\"m\">640</span><span class=\"w\"> </span>-H<span class=\"w\"> </span><span class=\"m\">640</span><span class=\"w\"> </span>-c<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span>-l<span class=\"w\"> </span>none<span class=\"w\"> </span>--random-state<span class=\"w\"> </span>-t<span class=\"w\"> </span>arc<span class=\"w\"> </span>bar<span class=\"w\"> </span>button<span class=\"w\"> </span>buttonmatrix<span class=\"w\"> </span>calendar<span class=\"w\"> </span>checkbox<span class=\"w\"> </span>dropdown<span class=\"w\"> </span>label<span class=\"w\"> </span>roller<span class=\"w\"> </span>scale<span class=\"w\"> </span>slider<span class=\"w\"> </span>spinbox<span class=\"w\"> </span>switch<span class=\"w\"> </span>table<span class=\"w\"> </span>textarea\n</code></pre>\n</div>\n\n<p>or directly:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>./lv_micropython/ports/unix/build-standard/micropython<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span>-m<span class=\"w\"> </span>random<span class=\"w\"> </span>--normalize<span class=\"w\"> </span>-o<span class=\"w\"> </span>screenshot.jpg<span class=\"w\"> </span>-W<span class=\"w\"> </span><span class=\"m\">640</span><span class=\"w\"> </span>-H<span class=\"w\"> </span><span class=\"m\">640</span><span class=\"w\"> </span>-c<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span>-l<span class=\"w\"> </span>none<span class=\"w\"> </span>--random-state<span class=\"w\"> </span>-t<span class=\"w\"> </span>arc<span class=\"w\"> </span>bar<span class=\"w\"> </span>button<span class=\"w\"> </span>buttonmatrix<span class=\"w\"> </span>calendar<span class=\"w\"> </span>checkbox<span class=\"w\"> </span>dropdown<span class=\"w\"> </span>label<span class=\"w\"> </span>roller<span class=\"w\"> </span>scale<span class=\"w\"> </span>slider<span class=\"w\"> </span>spinbox<span class=\"w\"> </span>switch<span class=\"w\"> </span>table<span class=\"w\"> </span>textarea\n</code></pre>\n</div>\n\n<h3 id=\"design-mode\">Design mode</h3>\n\n<p>Run via <code>invoke</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>poetry<span class=\"w\"> </span>run<span class=\"w\"> </span>invoke<span class=\"w\"> </span>generate-design\n</code></pre>\n</div>\n\n<p>or via <code>poetry</code>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>poetry<span class=\"w\"> </span>run<span class=\"w\"> </span>micropython<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span>-m<span class=\"w\"> </span>design<span class=\"w\"> </span>--normalize<span class=\"w\"> </span>-f<span class=\"w\"> </span>./designs/widgets_showcase.json<span class=\"w\"> </span>-o<span class=\"w\"> </span>screenshot.jpg\n</code></pre>\n</div>\n\n<p>or directly:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>./lv_micropython/ports/unix/build-standard/micropython<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span>-m<span class=\"w\"> </span>design<span class=\"w\"> </span>--normalize<span class=\"w\"> </span>-f<span class=\"w\"> </span>./designs/widgets_showcase.json<span class=\"w\"> </span>-o<span class=\"w\"> </span>screenshot.jpg\n</code></pre>\n</div>\n\n<h2 id=\"usage-of-random-mode\">Usage of random mode</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>usage:<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span><span class=\"o\">[</span>-h<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-m,<span class=\"w\"> </span>--mode<span class=\"w\"> </span>mode<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-?,<span class=\"w\"> </span>--usage<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-n,<span class=\"w\"> </span>--normalize<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-W,<span class=\"w\"> </span>--width<span class=\"w\"> </span>width<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-H,<span class=\"w\"> </span>--height<span class=\"w\"> </span>height<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-c,<span class=\"w\"> </span>--widget_count<span class=\"w\"> </span>widget_count<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-t,<span class=\"w\"> </span>--widget_types<span class=\"w\"> </span>widget_types+<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-l,<span class=\"w\"> </span>--layout<span class=\"w\"> </span>layout<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>--random-state<span class=\"o\">]</span>\n\nProcess<span class=\"w\"> </span>CLI<span class=\"w\"> </span>arguments<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>the<span class=\"w\"> </span>UI<span class=\"w\"> </span>generator.\n\noptional<span class=\"w\"> </span>args:\n<span class=\"w\">  </span>-h,<span class=\"w\"> </span>--help<span class=\"w\">                        </span>show<span class=\"w\"> </span>this<span class=\"w\"> </span>message<span class=\"w\"> </span>and<span class=\"w\"> </span><span class=\"nb\">exit</span>\n<span class=\"w\">  </span>-m,<span class=\"w\"> </span>--mode<span class=\"w\">                        </span>mode<span class=\"w\"> </span>the<span class=\"w\"> </span>mode<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>the<span class=\"w\"> </span>program<span class=\"w\"> </span><span class=\"k\">in</span>\n<span class=\"w\">  </span>-?,<span class=\"w\"> </span>--usage<span class=\"w\">                       </span>Print<span class=\"w\"> </span>usage<span class=\"w\"> </span>information<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>that<span class=\"w\"> </span>mode.\n<span class=\"w\">  </span>-n,<span class=\"w\"> </span>--normalize<span class=\"w\">                   </span>normalize<span class=\"w\"> </span>the<span class=\"w\"> </span>bounding<span class=\"w\"> </span>boxes\n<span class=\"w\">  </span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"w\">     </span>The<span class=\"w\"> </span>output<span class=\"w\"> </span>file<span class=\"w\"> </span><span class=\"o\">(</span>screenshot<span class=\"o\">)</span>\n<span class=\"w\">  </span>-W,<span class=\"w\"> </span>--width<span class=\"w\"> </span>width<span class=\"w\">                 </span>the<span class=\"w\"> </span>width<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>UI\n<span class=\"w\">  </span>-H,<span class=\"w\"> </span>--height<span class=\"w\"> </span>height<span class=\"w\">               </span>the<span class=\"w\"> </span>height<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>UI\n<span class=\"w\">  </span>-c,<span class=\"w\"> </span>--widget_count<span class=\"w\"> </span>widget_count<span class=\"w\">   </span>the<span class=\"w\"> </span>count<span class=\"w\"> </span>of<span class=\"w\"> </span>widgets\n<span class=\"w\">  </span>-t,<span class=\"w\"> </span>--widget_types<span class=\"w\"> </span>widget_types+<span class=\"w\">  </span>A<span class=\"w\"> </span>list<span class=\"w\"> </span>of<span class=\"w\"> </span>widget<span class=\"w\"> </span>types\n<span class=\"w\">  </span>-l,<span class=\"w\"> </span>--layout<span class=\"w\"> </span>layout<span class=\"w\">               </span>the<span class=\"w\"> </span>layout<span class=\"w\"> </span>option\n<span class=\"w\">  </span>--random-state<span class=\"w\">                    </span>Use<span class=\"w\"> </span>a<span class=\"w\"> </span>random<span class=\"w\"> </span>state<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>each<span class=\"w\"> </span>created<span class=\"w\"> </span>widget<span class=\"w\"> </span><span class=\"o\">(</span>experimental<span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"widget-types\">Widget types</h3>\n\n<p>Not all widget types of LittlevGL are implemented yet. You may use non-implemented widget types, but they probably will not be displayed properly or simply exist in their default state, if they have one.</p>\n\n<p>The names of widget types are the lowercase names of the classes in the LittlevGL library, e.g. <code>lv_arc</code> is <code>arc</code>.</p>\n\n<p><details></p>\n\n<p><summary>Implemented types</summary></p>\n\n<ul>\n<li>Arc</li>\n<li>Bar</li>\n<li>Button</li>\n<li>Buttonmatrix</li>\n<li>Calendar</li>\n<li>Checkbox</li>\n<li>Dropdown</li>\n<li>Label</li>\n<li>Roller</li>\n<li>Scale</li>\n<li>Slider</li>\n<li>Spinbox</li>\n<li>Switch</li>\n<li>Table</li>\n<li>Textarea</li>\n</ul>\n\n<p></details></p>\n\n<h3 id=\"layouts\">Layouts</h3>\n\n<p>The generator supports different layouts to structure the widgets inside the container. The following layouts are available:</p>\n\n<ul>\n<li><code>none</code>: No layout, widgets are placed using absolute positioning. This is the default layout and recommended to use. To avoid overlapping widgets, the generator will try to find a free spot using a approximated spatial map of the UI.</li>\n<li><code>flex</code>: A layout, which will align widgets in either row or column, fitting as needed. The flex mode used is hardcoded to ROW_WRAP, which means that the widgets will be placed in a row, and if the row is full, the next widget will be placed in the next row.</li>\n<li><code>grid</code>: A layout, which will align widgets in a grid. The grid layout is not yet implemented, since it is very error-prone in the way widgets are randomly created and placed.</li>\n</ul>\n\n<h3 id=\"style-randomization\">Style randomization</h3>\n\n<p>The generator will always randomize the style of each widget upon creation.</p>\n\n<p>It does so by randomly choosing multiple properties from a list of hardcoded properties and setting a random value for each of them. The hardcoded list can be found in the <code>randomize_style()</code> function of <code>src/random_ui.py</code>, but for convenience is also provided below.</p>\n\n<p>The generator will randomize at least 3 properties, up to the length of the hardcoded property list.</p>\n\n<p>The properties are applied to the widget by first creating a style object, then setting the properties on the style object and finally applying the style to the widget. This should avoid issues with properties not being available or applicable for certain widget types.</p>\n\n<p><details></p>\n\n<p><summary> List of style properties used for randomization</summary></p>\n\n<ul>\n<li><code>set_bg_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_bg_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_border_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_border_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_border_width</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_outline_width</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_outline_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_outline_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_shadow_width</code> -> <code>random.randint(0, 15)</code></li>\n<li><code>set_shadow_offset_x</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_shadow_offset_y</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_shadow_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_shadow_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_line_width</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_line_dash_width</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_line_dash_gap</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_line_rounded</code> -> <code>random.choice([True, False])</code></li>\n<li><code>set_line_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_line_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_text_color</code> -> <code>lv.color_hex(random.randint(0, 0xFFFFFF))</code></li>\n<li><code>set_text_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_text_letter_space</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_text_line_space</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_opa</code> -> <code>random.randint(0, 100)</code></li>\n<li><code>set_align</code> -> <code>random.choice([lv.ALIGN.CENTER, lv.ALIGN.TOP_LEFT, lv.ALIGN.TOP_RIGHT, lv.ALIGN.TOP_MID, lv.ALIGN.BOTTOM_LEFT, lv.ALIGN.BOTTOM_RIGHT, lv.ALIGN.BOTTOM_MID, lv.ALIGN.LEFT_MID, lv.ALIGN.RIGHT_MID, lv.ALIGN.DEFAULT])</code></li>\n<li><code>set_pad_all</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_hor</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_ver</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_gap</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_top</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_bottom</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_left</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_right</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_row</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_pad_column</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_margin_top</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_margin_bottom</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_margin_left</code> -> <code>random.randint(0, 10)</code></li>\n<li><code>set_margin_right</code> -> <code>random.randint(0, 10</code></li>\n</ul>\n\n<p></details></p>\n\n<h3 id=\"state-randomization\">State randomization</h3>\n\n<p>The <code>--random-state</code> flag will randomize the state of each widget upon creation. </p>\n\n<p>This is an experimental feature, as it is not always desired to be used. Additionally, randomizing the state of a widget may lead to a widget not being displayed, due to random choice of a state that is either not supported by the widget or the state hiding the widget in general.\nIt may also simply not affect the widget at all, which is another reason I have provided this as an optional flag.</p>\n\n<p><details></p>\n\n<p><summary>List of widget states used for randomization</summary></p>\n\n<ul>\n<li><code>lv.STATE.CHECKED</code></li>\n<li><code>lv.STATE.DISABLED</code></li>\n<li><code>lv.STATE.FOCUSED</code></li>\n<li><code>lv.STATE.PRESSED</code></li>\n<li><code>lv.STATE.HOVERED</code></li>\n<li><code>lv.STATE.EDITED</code></li>\n</ul>\n\n<p></details></p>\n\n<h2 id=\"design-mode-2\">Design mode</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>usage:<span class=\"w\"> </span>src/main.py<span class=\"w\"> </span><span class=\"o\">[</span>-h<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-m,<span class=\"w\"> </span>--mode<span class=\"w\"> </span>mode<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-?,<span class=\"w\"> </span>--usage<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-n,<span class=\"w\"> </span>--normalize<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"o\">]</span><span class=\"w\"> </span><span class=\"o\">[</span>-f,<span class=\"w\"> </span>--file<span class=\"w\"> </span>file<span class=\"o\">]</span>\n\nProcess<span class=\"w\"> </span>CLI<span class=\"w\"> </span>arguments<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>the<span class=\"w\"> </span>UI<span class=\"w\"> </span>generator.\n\noptional<span class=\"w\"> </span>args:\n<span class=\"w\">  </span>-h,<span class=\"w\"> </span>--help<span class=\"w\">                            </span>show<span class=\"w\"> </span>this<span class=\"w\"> </span>message<span class=\"w\"> </span>and<span class=\"w\"> </span><span class=\"nb\">exit</span>\n<span class=\"w\">  </span>-m,<span class=\"w\"> </span>--mode<span class=\"w\"> </span>mode<span class=\"w\">                       </span>the<span class=\"w\"> </span>mode<span class=\"w\"> </span>to<span class=\"w\"> </span>run<span class=\"w\"> </span>the<span class=\"w\"> </span>program<span class=\"w\"> </span><span class=\"k\">in</span>\n<span class=\"w\">  </span>-?,<span class=\"w\"> </span>--usage<span class=\"w\">                           </span>Print<span class=\"w\"> </span>usage<span class=\"w\"> </span>information<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>that<span class=\"w\"> </span>mode.\n<span class=\"w\">  </span>-n,<span class=\"w\"> </span>--normalize<span class=\"w\">                       </span>normalize<span class=\"w\"> </span>the<span class=\"w\"> </span>bounding<span class=\"w\"> </span>boxes\n<span class=\"w\">  </span>-o,<span class=\"w\"> </span>--output_file<span class=\"w\"> </span>output_file<span class=\"w\">         </span>The<span class=\"w\"> </span>output<span class=\"w\"> </span>file<span class=\"w\"> </span><span class=\"o\">(</span>screenshot<span class=\"o\">)</span>\n<span class=\"w\">  </span>-f,<span class=\"w\"> </span>--file<span class=\"w\">                            </span>file<span class=\"w\"> </span>path<span class=\"w\"> </span>to<span class=\"w\"> </span>JSON<span class=\"w\"> </span>design<span class=\"w\"> </span>file\n</code></pre>\n</div>\n\n<h3 id=\"design-file-specification\">Design file specification</h3>\n\n<p>Design files need to be valid according to the <a href=\"schema/design_file.schema.json\">JSON schema (<code>design_file.schema.json</code>)</a>.</p>\n\n<p>If design files are invalid, the design parser will throw a <code>ValueError</code> whenever it encounters required objects that are missing or have the wrong type.\nFor widget definition, not all properties are required and if some are missing, the generator will make up for it by randomly choosing an appropriate value.</p>\n\n<p>For example, if you create the <code>label</code> widget and do not provide a <code>text</code> property, the generator will choose a random amount of symbols from the displayable ASCII table and set it as the text of the label.</p>\n\n<p>The overall structure of the design file should look like this:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;$schema&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;./schema/design_file.schema.json&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;ui&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;window&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;width&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">640</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;height&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">640</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;title&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Example design file&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;root&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;main_container&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;container&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"nt\">&quot;layout_type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;none&quot;</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;style&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"s2\">&quot;main_container_style&quot;</span>\n<span class=\"w\">            </span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;children&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">                </span><span class=\"err\">...</span>\n<span class=\"w\">            </span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;styles&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"err\">...</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n<p>Have a look at the <a href=\"designs\">designs folder</a> for examples of design files. The <a href=\"designs/widgets_showcase.json\">widgets_showcase.json</a> file is a good starting point to see usage of all implemented widget types.</p>\n\n<h4 id=\"general-design-file-rules-notes\">General design file rules &amp; notes</h4>\n\n<p>Writing a design parser is a bit complicated, so there are some rules to follow when creating a design file:</p>\n\n<ol>\n<li>It is mandatory that the first widget object in <code>root</code> is a container, as the root widget is always a container _(in any UI framework as far as I am aware)_. <strong>Unexpected/error behavior will occur if this is not the case.</strong></li>\n<li>The title of the window is not mandatory and also not used by the generator. It is only there for reference to the user possibly looking through dozens of design files.</li>\n<li>The <code>styles</code> object is optional and can be omitted if no styles are defined.</li>\n<li>Added styles are referenced by their name in the <code>style</code> array of each widget. If a style is not found, the generator will throw a <code>ValueError</code>.</li>\n<li>A style defines a list of properties that are applied to widgets via the usage of a <code>lv.style_t</code> object. The possible properties are the same as documented in the <a href=\"https://docs.lvgl.io/9.1/API/misc/lv_style_gen.html#\">LittlevGL API for styles</a>. Properties are verified by checking if the specified name has a corresponding <code>setter</code> attribute in the <code>lv.style_t</code> object. This is done by appending <code>set_</code> to the property name, thus you are required to use the property setter function names without the <code>set_</code> prefix. For example, to set the background color of a widget, you would use the property <code>bg_color</code>. The generator will then look for the <code>set_bg_color</code> attribute in the <code>lv.style_t</code> object and apply the converted value to it.</li>\n<li>If a provided <code>property</code> inside a <code>style</code> object does not actually correspond to an available attribute in <code>lv.style_t</code>, the generator will ignore it and continue.</li>\n<li>Values supplied to style properties are converted according to the required type of the property. Some properties taking in special objects, like colors, require a specific string to be supplied (e.g. <code>#AABBCC</code> for any color property or <code>top-left</code> for the <code>align</code> property). You can checkout the details of the value conversion in the function <code>convert_value()</code> of <code>design_parser.py</code>.</li>\n<li>If value conversion fails, the property is ignored and the generator will ignore it and continue.</li>\n<li>The <code>id</code> property is mandatory for widgets of type <code>container</code>, as it is required to reference the container inside the <code>children</code> array, when the special widget type <code>random</code> is used.</li>\n<li>The special widget type <code>random</code> may be used to supply a list of widget types for the generator to randomly choose from and then create a random widget in similar fashion to the random mode. This is useful for randomizing widgets in certain areas of the UI, while keeping the rest of the UI static.</li>\n</ol>\n\n<h4 id=\"validating-design-files\">Validating design files</h4>\n\n<p>You can validate your design files against the available JSON schema in the repository by using the <code>jsonschema</code> package in python. Keep in mind, that <code>micropython</code> does not have this package and you will need to use the regular python interpreter to do this.</p>\n\n<p>This is usually more descriptive than the error messages provided by the generator.</p>\n\n<p>Here is a simple script to validate a design file:</p>\n\n<p><details></p>\n\n<p><summary>validate_design.py</summary></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">load_json_file</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">json</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">filepath</span><span class=\"p\">,</span> <span class=\"s1\">&#39;r&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">verify_design_from_file</span><span class=\"p\">(</span><span class=\"n\">design_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">schema_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">]:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">jsonschema.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n    <span class=\"n\">design</span> <span class=\"o\">=</span> <span class=\"n\">load_json_file</span><span class=\"p\">(</span><span class=\"n\">design_file</span><span class=\"p\">)</span>\n    <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">load_json_file</span><span class=\"p\">(</span><span class=\"n\">schema_file</span><span class=\"p\">)</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">design</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Provided design file </span><span class=\"si\">{</span><span class=\"n\">design_file</span><span class=\"si\">}</span><span class=\"s2\"> is valid.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n    <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Provided design file </span><span class=\"si\">{</span><span class=\"n\">design_file</span><span class=\"si\">}</span><span class=\"s2\"> is invalid:</span><span class=\"se\">\\n</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">e</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;__main__&#39;</span><span class=\"p\">:</span>\n    <span class=\"n\">verify_design_from_file</span><span class=\"p\">(</span><span class=\"s1\">&#39;path/to/design_file.json&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path/to/design_file.schema.json&#39;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p></details></p>\n\n<h1 id=\"development\">Development</h1>\n\n<p>Inside the <code>stubs</code> folder is the <code>lvgl.pyi</code> stubs file, which contains type hints for the <a href=\"https://github.com/lvgl/lv_binding_micropython\">LVGL micropython bindings</a>. This is useful for development in an IDE that supports type hinting, like VS Code with the Python extension.</p>\n\n<p>The <code>settings.json</code> file in the <code>.vscode</code> folder contains the necessary settings to enable type hinting for the <code>lvgl.pyi</code> file in Visual Studio Code.</p>\n\n<p>The stubs file was generated by <a href=\"https://github.com/kdschlosser\">kdschlosser</a> and supplied to me during a <a href=\"https://forum.lvgl.io/t/how-does-one-create-micropython-stubs-of-lvgl-bindings-for-unix-port/15233\">discussion on the LVGL forum</a>.</p>\n\n<p>The used stub generator for this file can be viewed <a href=\"https://github.com/lvgl/lvgl/pull/5677\">in this PR</a> and is generally not merged yet into LVGL, so it is not complete and may cause errors.</p>\n\n<p>The created stubs file also may not cover all functions and classes of the LittlevGL bindings, but generally covers enough and linting errors are more of a nuisance than a real issue.</p>\n\n<h1 id=\"known-issues\">Known issues</h1>\n\n<ul>\n<li>Creating a screenshot using the <a href=\"https://docs.lvgl.io/9.1/others/snapshot.html\"><code>snapshot</code> API of LittlevGL</a> certainly causes memory leakage due to the manually added JPEG encoding mechanism in <code>screenshot.py</code> and dereferencing of the data buffer. It is hard to deal with this without a proper JPG encoder library built into micropython binary. The memory leakage is not too severe and I attempted to mitigate it by attempting to always free the snapshot buffer using <code>lv.snapshot_free()</code> but it is not fool-proof.</li>\n<li>The generator may sometimes cause a memory allocation error when attempting to create the JPG buffer for the screenshot. This is due to the fact that the JPG buffer is created in heap and knowingly it is limited in size. The generator will attempt to free the buffer after the screenshot is taken, but it is not guaranteed that the buffer is freed properly. This is a known issue and there is no solution as of yet. You can try to run the generator again and it might work again after the OS has cleared up some memory.</li>\n<li>The JPG output of the screenshot may sometimes be corrupted or the image data is heavily distorted. This is due to race conditions between creating the snapshot buffer and LVGL re-rendering the UI. It is currently not possible to mitigate this issue without writing a custom C library for LVGL which will handle the snapshot creation and JPEG encoding in a more controlled manner. The LVGL bindings do not have exposed APIs to handle this inside micropython as far as I know.</li>\n</ul>\n\n<h1 id=\"license\">License</h1>\n\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE\">LICENSE</a> file for details.</p>\n"}, {"fullname": "src.README_path", "modulename": "src", "qualname": "README_path", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;README.md&#x27;"}, {"fullname": "src.bin_to_jpg_conversion", "modulename": "src.bin_to_jpg_conversion", "kind": "module", "doc": "<p>A simple script to convert a created binary image file to a JPEG image.</p>\n\n<p>The script can convert binary image data to JPEG images.</p>\n\n<p>The script requires the width and height of the image to be provided as arguments.</p>\n\n<p>The binary image file should contain the raw pixel data of the image (i.e. bytes representing the pixel values, no headers).</p>\n"}, {"fullname": "src.bin_to_jpg_conversion.parse_args", "modulename": "src.bin_to_jpg_conversion", "qualname": "parse_args", "kind": "function", "doc": "<p>Parse command line arguments for the script.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.bin_to_jpg_conversion.rgb565_to_rgb888", "modulename": "src.bin_to_jpg_conversion", "qualname": "rgb565_to_rgb888", "kind": "function", "doc": "<p>Convert RGB565 pixel data to RGB888 pixel data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rgb565</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.bin_to_jpg_conversion.main", "modulename": "src.bin_to_jpg_conversion", "qualname": "main", "kind": "function", "doc": "<p>Main function for the script.</p>\n\n<p>The script reads the raw image data from the input file and determines the format of the data (RGB565 or RGB888),\nIf the data is in RGB565 format, it converts it to RGB888 format.</p>\n\n<p>The script then creates a Pillow image from the pixel data and saves it as a JPEG image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.cli", "modulename": "src.cli", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.cli.process_design_arguments", "modulename": "src.cli", "qualname": "process_design_arguments", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>parser</code> The parser object to process the arguments with.</li>\n<li><code>print_help</code> A flag to determine if the help message for this mode should be printed. Default is False.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>args.Namespace</code> The parsed arguments for the design mode, including the initial general arguments.</li>\n</ul>\n\n<p>Process the arguments for the design mode subparser.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parser</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span>, </span><span class=\"param\"><span class=\"n\">print_help</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.cli.process_generator_arguments", "modulename": "src.cli", "qualname": "process_generator_arguments", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>parser</code> The parser object to process the arguments with.</li>\n<li><code>print_help</code> A flag to determine if the help message for this mode should be printed. Default is False.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>args.Namespace</code> The parsed arguments for the generator mode, including the initial general arguments.</li>\n</ul>\n\n<p>Process the arguments for the generator mode subparser.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parser</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span>, </span><span class=\"param\"><span class=\"n\">print_help</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.cli.process_arguments", "modulename": "src.cli", "qualname": "process_arguments", "kind": "function", "doc": "<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>args.Namespace</code> The parsed arguments for the UI generator.</li>\n</ul>\n\n<p>Process the arguments for the UI generator.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser", "modulename": "src.design_parser", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.design_parser.UiLoader", "modulename": "src.design_parser", "qualname": "UiLoader", "kind": "class", "doc": "<p>A class to load and parse UI designs from JSON files.</p>\n\n<p><strong>Class Attributes:</strong></p>\n\n<ul>\n<li><code>special_types</code> A list of special widget types that require custom creation logic.</li>\n<li><code>valid_types</code> A list of all valid widget types that can be created.</li>\n<li><code>valid_layouts</code> A list of valid layout types for container widgets.</li>\n<li><code>valid_flow</code> A list of valid flow types for flex layout containers.</li>\n<li><code>_options</code> The key for the options property in a container widget.</li>\n</ul>\n\n<p><strong>Object Attributes:</strong></p>\n\n<ul>\n<li><code>data</code> The JSON data loaded from the file.</li>\n<li><code>ui</code> The 'ui' object from the JSON data.</li>\n<li><code>widgets</code> A dictionary to store references to created widgets.</li>\n<li><code>styles</code> A dictionary to store references to created styles.</li>\n<li><code>width</code> The width of the screen.</li>\n<li><code>height</code> The height of the screen.</li>\n<li><code>title</code> The title of the window (not used, reference for author).</li>\n<li><code>screen</code> The display driver object.</li>\n<li><code>root_widget</code> The root widget object of the UI.</li>\n</ul>\n"}, {"fullname": "src.design_parser.UiLoader.__init__", "modulename": "src.design_parser", "qualname": "UiLoader.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">json_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "src.design_parser.UiLoader.special_types", "modulename": "src.design_parser", "qualname": "UiLoader.special_types", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;container&#x27;, &#x27;random&#x27;]"}, {"fullname": "src.design_parser.UiLoader.valid_types", "modulename": "src.design_parser", "qualname": "UiLoader.valid_types", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;container&#x27;, &#x27;random&#x27;, &#x27;arc&#x27;, &#x27;bar&#x27;, &#x27;button&#x27;, &#x27;buttonmatrix&#x27;, &#x27;calendar&#x27;, &#x27;canvas&#x27;, &#x27;chart&#x27;, &#x27;checkbox&#x27;, &#x27;dropdown&#x27;, &#x27;image&#x27;, &#x27;imagebutton&#x27;, &#x27;keyboard&#x27;, &#x27;label&#x27;, &#x27;led&#x27;, &#x27;line&#x27;, &#x27;list&#x27;, &#x27;menu&#x27;, &#x27;messagebox&#x27;, &#x27;roller&#x27;, &#x27;scale&#x27;, &#x27;slider&#x27;, &#x27;spangroup&#x27;, &#x27;spinbox&#x27;, &#x27;spinner&#x27;, &#x27;switch&#x27;, &#x27;table&#x27;, &#x27;tabview&#x27;, &#x27;textarea&#x27;, &#x27;tileview&#x27;, &#x27;window&#x27;]"}, {"fullname": "src.design_parser.UiLoader.valid_layouts", "modulename": "src.design_parser", "qualname": "UiLoader.valid_layouts", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;none&#x27;, &#x27;grid&#x27;, &#x27;flex&#x27;]"}, {"fullname": "src.design_parser.UiLoader.valid_flow", "modulename": "src.design_parser", "qualname": "UiLoader.valid_flow", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;row&#x27;, &#x27;column&#x27;, &#x27;row_wrap&#x27;, &#x27;column_wrap&#x27;, &#x27;row_reverse&#x27;, &#x27;column_reverse&#x27;]"}, {"fullname": "src.design_parser.UiLoader.data", "modulename": "src.design_parser", "qualname": "UiLoader.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.design_parser.UiLoader.ui", "modulename": "src.design_parser", "qualname": "UiLoader.ui", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.design_parser.UiLoader.widgets", "modulename": "src.design_parser", "qualname": "UiLoader.widgets", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.design_parser.UiLoader.styles", "modulename": "src.design_parser", "qualname": "UiLoader.styles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.design_parser.UiLoader.load_json_file", "modulename": "src.design_parser", "qualname": "UiLoader.load_json_file", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>filepath</code> The path to the JSON file to load.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>dict</code> The JSON data loaded from the file.</li>\n</ul>\n\n<p>Load and return the JSON data from a file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filepath</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.initialize_screen", "modulename": "src.design_parser", "qualname": "UiLoader.initialize_screen", "kind": "function", "doc": "<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>driver</code> The display driver object.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the 'window' property is missing or invalid.</li>\n<li><code>ValueError</code> If the 'width' property is missing or invalid.</li>\n<li><code>ValueError</code> If the 'height' property is missing or invalid.</li>\n</ul>\n\n<p>Initialize a display driver in the specified width and height of the JSON data to create a window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.parse_ui", "modulename": "src.design_parser", "qualname": "UiLoader.parse_ui", "kind": "function", "doc": "<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>root</code> JSON property is missing or invalid.</li>\n</ul>\n\n<p>Parse the UI elements under the <code>root</code> object of the JSON data.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.parse_element", "modulename": "src.design_parser", "qualname": "UiLoader.parse_element", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to parse.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>lv.obj | lv.button | lv.label | lv.image | lv.line | lv.bar | lv.slider | lv.switch | lv.checkbox | lv.roller | lv.dropdown | lv.textarea | lv.chart</code> The created widget object based on the element type.</li>\n</ul>\n\n<p>Parse a widget object JSON element and create the corresponding widget.\nIf the element has children, <strong>they will be parsed recursively</strong> and attached to the parent widget.\nIf the element has one or more styles, they will be applied to the created widget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.create_widget", "modulename": "src.design_parser", "qualname": "UiLoader.create_widget", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the widget from.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>lv.obj | lv.button | lv.label | lv.image | lv.line | lv.bar | lv.slider | lv.switch | lv.checkbox | lv.roller | lv.dropdown | lv.textarea | lv.chart</code> The created widget object based on the element type.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the widget type is not recognized.</li>\n<li><code>ValueError</code> If the specified <code>id</code> already exists in previously created widgets.</li>\n</ul>\n\n<p>Create an LVGL widget object based on the type specified in the JSON element.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj.__or__().__or__().__or__().__or__().__or__().__or__().__or__().__or__().__or__().__or__().__or__().__or__()&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128986237392&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.create_container", "modulename": "src.design_parser", "qualname": "UiLoader.create_container", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the container widget from.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>lv.obj</code> The created container widget object.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>id</code> or <code>options</code> properties are missing or invalid.</li>\n<li><code>ValueError</code> If the <code>layout_type</code> property is missing or invalid.</li>\n<li><code>ValueError</code> If the layout type is <code>grid</code> or <code>flex</code> and the <code>layout_options</code> property is missing or invalid.</li>\n</ul>\n\n<p>Create a container widget based on the JSON element.\nIf the layout type is 'grid' or 'flex', the 'layout_options' property must be present.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.configure_flex_layout", "modulename": "src.design_parser", "qualname": "UiLoader.configure_flex_layout", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>container</code> The container widget to configure the flex layout for.</li>\n<li><code>options</code> The options dictionary for the flex layout.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>flow</code> property is missing or invalid.</li>\n</ul>\n\n<p>Configure the flex layout of a container widget based on the options provided in the JSON element.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.configure_grid_layout", "modulename": "src.design_parser", "qualname": "UiLoader.configure_grid_layout", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>container</code> The container widget to configure the grid layout for.</li>\n<li><code>options</code> The options dictionary for the grid layout.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>grid_dsc</code> property is missing or invalid.</li>\n<li><code>ValueError</code> If the <code>col_dsc</code> or <code>row_dsc</code> properties are missing or invalid.</li>\n</ul>\n\n<p>Configure the grid layout of a container widget based on the options provided in the JSON element.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.create_random_widget", "modulename": "src.design_parser", "qualname": "UiLoader.create_random_widget", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the random widget from.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>lv.obj | lv.button | lv.label | lv.image | lv.line | lv.bar | lv.slider | lv.switch | lv.checkbox | lv.roller | lv.dropdown | lv.textarea | lv.chart</code> The created random widget object.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>parent_id</code>, <code>count</code>, or <code>widget_list</code> properties are missing or invalid.</li>\n</ul>\n\n<p>Create a random widget based on the JSON element.\nA random type is chosen from the 'widget_list' property. The chosen type is then passed to the widget creation function.\nThis is done X times based on the 'count' property.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.place_widget_in_grid", "modulename": "src.design_parser", "qualname": "UiLoader.place_widget_in_grid", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>widget</code> The widget to place in the grid container.</li>\n<li><code>child_element</code> The JSON element of the child widget to place in the grid container.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the <code>placement</code> property is missing or invalid.</li>\n<li><code>ValueError</code> If the <code>col_pos</code>, <code>col_span</code>, <code>row_pos</code>, or <code>row_span</code> properties are missing or invalid.</li>\n</ul>\n\n<p>Place the provided child widget in the grid container widget based on the 'placement' property in the child JSON element.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">child_element</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.create_style", "modulename": "src.design_parser", "qualname": "UiLoader.create_style", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>style_def</code> The JSON style definition to create the style object from.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>lv.style_t</code> The created style object.</li>\n</ul>\n\n<p>Create an LVGL style object based on the style definition provided in the JSON data.\nProvided style property values are converted to the required type, according to conversion rules of the called conversion function.\nIf a style property is not recognized, a message is printed to the console and the property is skipped.\nIf value conversion fails, a message is printed to the console and the property is skipped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">style_def</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.convert_value", "modulename": "src.design_parser", "qualname": "UiLoader.convert_value", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>prop_name</code> The name of the property to convert the value for.</li>\n<li><code>value</code> The value to convert to the required type.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>int | str | lv.color_t | lv.font_t | lv.align_t | lv.OPA | None</code> The converted value based on the property name.</li>\n<li><code>None</code> If the conversion fails.</li>\n</ul>\n\n<p>Convert the provided value to the required type based on the property name.\nIf there is no conversion available for the property, None is returned. (i.e. conversion fails)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prop_name</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.apply_style", "modulename": "src.design_parser", "qualname": "UiLoader.apply_style", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>widget</code> The widget object to apply the style to.</li>\n<li><code>style_name</code> The name of the style to apply to the widget.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li><code>ValueError</code> If the style does not exist in the JSON data.</li>\n</ul>\n\n<p>Lookup the style name in the list of styles and apply the created style object to the widget.\nIf the style name is not found in the list of styles, a new style is created and added to the list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">widget</span>, </span><span class=\"param\"><span class=\"n\">style_name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.update_screen", "modulename": "src.design_parser", "qualname": "UiLoader.update_screen", "kind": "function", "doc": "<p>Re-render the screen &amp; update the layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.get_root_widget", "modulename": "src.design_parser", "qualname": "UiLoader.get_root_widget", "kind": "function", "doc": "<p>Return the root widget object (container) of the UI.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.get_ui", "modulename": "src.design_parser", "qualname": "UiLoader.get_ui", "kind": "function", "doc": "<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>UI</code> The UI object containing the metadata.</li>\n</ul>\n\n<p>Return a UI object (special dictionary) containing the screen dimensions and all widget position metadata required for bounding box annotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">UI</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.design_parser.UiLoader.cleanup", "modulename": "src.design_parser", "qualname": "UiLoader.cleanup", "kind": "function", "doc": "<p>Cleanup the screen and widgets, destroying all created objects.\nNote that this function will cause a known error when sub-widgets are indirectly deleted by destroying their parent container.\nThat error is safe to ignore, as the widgets should be properly deleted by LVGL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.global_definitions", "modulename": "src.global_definitions", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.global_definitions.ascii_letters", "modulename": "src.global_definitions", "qualname": "ascii_letters", "kind": "variable", "doc": "<p>A list of all writable ascii letters</p>\n", "default_value": "&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;"}, {"fullname": "src.global_definitions.widget_types", "modulename": "src.global_definitions", "qualname": "widget_types", "kind": "variable", "doc": "<p>A list of all LVGL widget types</p>\n", "default_value": "[&#x27;arc&#x27;, &#x27;bar&#x27;, &#x27;button&#x27;, &#x27;buttonmatrix&#x27;, &#x27;calendar&#x27;, &#x27;canvas&#x27;, &#x27;chart&#x27;, &#x27;checkbox&#x27;, &#x27;dropdown&#x27;, &#x27;image&#x27;, &#x27;imagebutton&#x27;, &#x27;keyboard&#x27;, &#x27;label&#x27;, &#x27;led&#x27;, &#x27;line&#x27;, &#x27;list&#x27;, &#x27;menu&#x27;, &#x27;messagebox&#x27;, &#x27;roller&#x27;, &#x27;scale&#x27;, &#x27;slider&#x27;, &#x27;spangroup&#x27;, &#x27;spinbox&#x27;, &#x27;spinner&#x27;, &#x27;switch&#x27;, &#x27;table&#x27;, &#x27;tabview&#x27;, &#x27;textarea&#x27;, &#x27;tileview&#x27;, &#x27;window&#x27;]"}, {"fullname": "src.global_definitions.implemented_types", "modulename": "src.global_definitions", "qualname": "implemented_types", "kind": "variable", "doc": "<p>A list of all implemented LVGL widget types in the generator</p>\n", "default_value": "[&#x27;arc&#x27;, &#x27;bar&#x27;, &#x27;button&#x27;, &#x27;buttonmatrix&#x27;, &#x27;calendar&#x27;, &#x27;checkbox&#x27;, &#x27;dropdown&#x27;, &#x27;label&#x27;, &#x27;led&#x27;, &#x27;roller&#x27;, &#x27;scale&#x27;, &#x27;slider&#x27;, &#x27;spinbox&#x27;, &#x27;switch&#x27;, &#x27;table&#x27;, &#x27;textarea&#x27;]"}, {"fullname": "src.main", "modulename": "src.main", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.main.ui", "modulename": "src.main", "qualname": "ui", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "src.main.main", "modulename": "src.main", "qualname": "main", "kind": "function", "doc": "<p><strong>Raises</strong>:</p>\n\n<ul>\n<li><code>ValueError</code> If UI object is None.</li>\n<li><code>ValueError</code> If root widget is None.</li>\n</ul>\n\n<p>Main function to generate UI and take screenshot.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.mock", "modulename": "src.mock", "kind": "module", "doc": "<p>This is a mock package to generate <code>pdoc</code> documentation for the LVGL UI Generator v2 project.</p>\n\n<p>The mock package contains mock objects for the <code>jpeg</code>, <code>lvgl</code>, and <code>display</code> modules.</p>\n\n<p>These mock objects are used to circumvent the <code>ImportError</code> that occurs when importing these unknown modules in a non-MicroPython environment.</p>\n\n<p>None of these objects are actually real, and are only used for documentation purposes.</p>\n\n<p>In the future, these mock objects may be extended to include further documentation regarding the aforementioned modules.</p>\n"}, {"fullname": "src.mock.display", "modulename": "src.mock.display", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.mock.display.driver", "modulename": "src.mock.display", "qualname": "driver", "kind": "variable", "doc": "<p>This is a mock object for the <code>display_driver_utils</code> module.</p>\n\n<p>This mock object is used to circumvent the <code>ImportError</code> that occurs when importing the unknown module in a non-MicroPython environment. (Like when generating documentation with <code>pdoc</code>)</p>\n\n<p>The actual <code>display_driver_utils</code> module is used to create the screen for the LVGL UI Generator v2 project.</p>\n\n<p>Further details about this can be viewed in the <a href=\"https://github.com/lvgl/lv_micropython\">official GitHub repository of <code>lv_micropython</code></a>.</p>\n", "default_value": "&lt;MagicMock id=&#x27;140128990799120&#x27;&gt;"}, {"fullname": "src.mock.jpeg", "modulename": "src.mock.jpeg", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.mock.jpeg.jpeg", "modulename": "src.mock.jpeg", "qualname": "jpeg", "kind": "variable", "doc": "<p>This is a mock object for the <code>jpeg</code> module.</p>\n\n<p>This mock object is used to circumvent the <code>ImportError</code> that occurs when importing the unknown module in a non-MicroPython environment. (Like when generating documentation with <code>pdoc</code>)</p>\n\n<p>The actual <code>jpeg</code> module is used to encode JPEG images for screenshots.</p>\n\n<p>It is compiled from the <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo\">libjpeg source project</a> and linked to the micropython binary.</p>\n\n<p>Further details about this can also be found in the <a href=\"https://tinyurl.com/lvgl-jpeg-encode-forum-post\">LVGL forum post where this was discussed</a>.</p>\n", "default_value": "&lt;MagicMock id=&#x27;140128986246352&#x27;&gt;"}, {"fullname": "src.mock.lvgl", "modulename": "src.mock.lvgl", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.mock.lvgl.lv", "modulename": "src.mock.lvgl", "qualname": "lv", "kind": "variable", "doc": "<p>This is a mock object for the <code>lvgl</code> module.</p>\n\n<p>This mock object is used to circumvent the <code>ImportError</code> that occurs when importing the unknown module in a non-MicroPython environment. (Like when generating documentation with <code>pdoc</code>)</p>\n\n<p>The actual <code>lvgl</code> module is used to create user interfaces with the unix port of <a href=\"https://github.com/lvgl/lv_micropython\">lv_micropython</a></p>\n\n<p>The <code>lv_micropython</code> project is a fork of the <a href=\"https://github.com/micropython/micropython\">MicroPython project</a> that includes the <a href=\"https://github.com/lvgl/lv_binding_micropython\">bindings for LittlevGL</a>.</p>\n\n<p>Further details about [LVGL] can be found in the <a href=\"https://docs.lvgl.io/master/\">official documentation</a> as well as <a href=\"https://github.com/lvgl/lvgl\">the official GitHub repository</a>.</p>\n", "default_value": "&lt;MagicMock id=&#x27;140128991051728&#x27;&gt;"}, {"fullname": "src.random_ui", "modulename": "src.random_ui", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.SpatialMap", "modulename": "src.random_ui", "qualname": "SpatialMap", "kind": "class", "doc": "<p>A simple spatial map to keep track of occupied areas in a container.</p>\n\n<p><strong>Object Attributes:</strong></p>\n\n<ul>\n<li><code>width</code> The width of the container.</li>\n<li><code>height</code> The height of the container.</li>\n<li><code>occupied</code> A list of dictionaries representing occupied areas in the container.</li>\n</ul>\n"}, {"fullname": "src.random_ui.SpatialMap.__init__", "modulename": "src.random_ui", "qualname": "SpatialMap.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span></span>)</span>"}, {"fullname": "src.random_ui.SpatialMap.width", "modulename": "src.random_ui", "qualname": "SpatialMap.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.SpatialMap.height", "modulename": "src.random_ui", "qualname": "SpatialMap.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.SpatialMap.occupied", "modulename": "src.random_ui", "qualname": "SpatialMap.occupied", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.SpatialMap.is_space_available", "modulename": "src.random_ui", "qualname": "SpatialMap.is_space_available", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>x</code> The x-coordinate of the space.</li>\n<li><code>y</code> The y-coordinate of the space.</li>\n<li><code>w</code> The width of the space.</li>\n<li><code>h</code> The height of the space.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>bool</code> True if the space is available, False otherwise.</li>\n</ul>\n\n<p>Check if the given space is available for a widget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">h</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.SpatialMap.occupy_space", "modulename": "src.random_ui", "qualname": "SpatialMap.occupy_space", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>x</code> The x-coordinate of the space.</li>\n<li><code>y</code> The y-coordinate of the space.</li>\n<li><code>w</code> The width of the space.</li>\n<li><code>h</code> The height of the space.</li>\n</ul>\n\n<p>Mark the given space as occupied, by adding it to the list of occupied areas.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">h</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.place_widget", "modulename": "src.random_ui", "qualname": "place_widget", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>container</code> The container to place the widget in.</li>\n<li><code>widget</code> The widget to place.</li>\n<li><code>spatial_map</code> The spatial map to check for available space.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>bool</code> True if the widget was placed successfully, False otherwise.</li>\n</ul>\n\n<p>Place a widget in a container, avoiding overlap with other widgets.\nPlacement occurs virtually be checking if the widget fits in the container using a spatial map.\nThe placing is done randomly within the container space and by checking the spatial map to avoid overlap with other widgets.\nPlacement is attempted 100 times before giving up.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">spatial_map</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">random_ui</span><span class=\"o\">.</span><span class=\"n\">SpatialMap</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI", "modulename": "src.random_ui", "qualname": "RandomUI", "kind": "class", "doc": "<p>A class to generate a random UI window with a specified width, height, widget count, widget types, output file, layout, and random state.</p>\n\n<p><strong>Class Attributes:</strong></p>\n\n<ul>\n<li><code>layout_options</code> A list of valid layout options.</li>\n</ul>\n\n<p><strong>Object Attributes:</strong></p>\n\n<ul>\n<li><code>width</code> The width of the UI window.</li>\n<li><code>height</code> The height of the UI window.</li>\n<li><code>widget_count</code> The number of widgets to generate.</li>\n<li><code>widget_types</code> A list of widget types to choose from.</li>\n<li><code>output_file</code> The output file name.</li>\n<li><code>layout</code> The layout type to use.</li>\n<li><code>random_state</code> A boolean flag to randomize widget state.</li>\n</ul>\n"}, {"fullname": "src.random_ui.RandomUI.__init__", "modulename": "src.random_ui", "qualname": "RandomUI.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">widget_count</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">widget_types</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">layout</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "src.random_ui.RandomUI.layout_options", "modulename": "src.random_ui", "qualname": "RandomUI.layout_options", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;flex&#x27;, &#x27;grid&#x27;, &#x27;none&#x27;]"}, {"fullname": "src.random_ui.RandomUI.width", "modulename": "src.random_ui", "qualname": "RandomUI.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.height", "modulename": "src.random_ui", "qualname": "RandomUI.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.widget_count", "modulename": "src.random_ui", "qualname": "RandomUI.widget_count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.widget_types", "modulename": "src.random_ui", "qualname": "RandomUI.widget_types", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.output_file", "modulename": "src.random_ui", "qualname": "RandomUI.output_file", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.layout", "modulename": "src.random_ui", "qualname": "RandomUI.layout", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.random_state", "modulename": "src.random_ui", "qualname": "RandomUI.random_state", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.objects", "modulename": "src.random_ui", "qualname": "RandomUI.objects", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.widgets", "modulename": "src.random_ui", "qualname": "RandomUI.widgets", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.type_count", "modulename": "src.random_ui", "qualname": "RandomUI.type_count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.random_ui.RandomUI.create_random_ui", "modulename": "src.random_ui", "qualname": "RandomUI.create_random_ui", "kind": "function", "doc": "<p><strong>Returns</strong>:</p>\n\n<ul>\n<li><code>Self</code></li>\n</ul>\n\n<p><strong>Raises</strong>:</p>\n\n<ul>\n<li><code>ValueError</code> If the layout is not a valid option.</li>\n</ul>\n\n<p>Create a random UI window with the specified width and height.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.create_random_layout_flex", "modulename": "src.random_ui", "qualname": "RandomUI.create_random_layout_flex", "kind": "function", "doc": "<p>Create a container layout using the flex layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.create_random_layout_grid", "modulename": "src.random_ui", "qualname": "RandomUI.create_random_layout_grid", "kind": "function", "doc": "<p>Create a container layout using the grid layout. <strong>(Not implemented)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.create_random_layout_none", "modulename": "src.random_ui", "qualname": "RandomUI.create_random_layout_none", "kind": "function", "doc": "<p>Create a container layout with absolute positioning.\nWidgets are placed randomly within the container, attempting to avoid overlap.\nSpacing between widgets is not guaranteed.\nStyle properties are randomized for each widget.\nWidget metadata of the UI is stored in the <code>widgets</code> dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.place_widget", "modulename": "src.random_ui", "qualname": "RandomUI.place_widget", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>widget</code> The widget to place.</li>\n<li><code>spatial_map</code> The spatial map to check for available space.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>bool</code> True if the widget was placed successfully, False otherwise.</li>\n</ul>\n\n<p>Place a widget in a container, avoiding overlap with other widgets.\nPlacement occurs virtually be checking if the widget fits in the container using a spatial map.\nThe placing is done randomly within the container space and by checking the spatial map to avoid overlap with other widgets.\nPlacement is attempted 100 times before giving up.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">widget</span>, </span><span class=\"param\"><span class=\"n\">spatial_map</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">random_ui</span><span class=\"o\">.</span><span class=\"n\">SpatialMap</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.create_random_widget", "modulename": "src.random_ui", "qualname": "RandomUI.create_random_widget", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>widget_type</code> The type of widget to create.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>Tuple[dict, lv.obj]</code> A tuple containing the widget metadata and object.</li>\n</ul>\n\n<p>Create a random widget of the specified type and return the widget metadata and object.\nIf <code>random_state</code> is enabled, the widget state is randomized.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">widget_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.randomize_style", "modulename": "src.random_ui", "qualname": "RandomUI.randomize_style", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>widget</code> The widget to randomize the style of.</li>\n</ul>\n\n<p>Randomize the style properties of a widget by creating a style object and setting randomly chosen properties with random values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.get_root_widget", "modulename": "src.random_ui", "qualname": "RandomUI.get_root_widget", "kind": "function", "doc": "<p>Return the root widget (container) of the UI.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.get_ui", "modulename": "src.random_ui", "qualname": "RandomUI.get_ui", "kind": "function", "doc": "<p><strong>Returns:</strong></p>\n\n<ul>\n<li><code>UI</code> The UI object containing the metadata.</li>\n</ul>\n\n<p>Return a UI object (special dictionary) containing the screen dimensions and all widget position metadata required for bounding box annotation.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">UI</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.random_ui.RandomUI.cleanup", "modulename": "src.random_ui", "qualname": "RandomUI.cleanup", "kind": "function", "doc": "<p>Cleanup the screen and widgets, destroying all created objects.\nNote that this function will cause a known error when sub-widgets are indirectly deleted by destroying their parent container.\nThat error is safe to ignore, as the widgets should be properly deleted by LVGL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.screenshot", "modulename": "src.screenshot", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image", "modulename": "src.screenshot", "qualname": "image", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image.__init__", "modulename": "src.screenshot", "qualname": "image.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span></span>)</span>"}, {"fullname": "src.screenshot.image.width", "modulename": "src.screenshot", "qualname": "image.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image.height", "modulename": "src.screenshot", "qualname": "image.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image.kind", "modulename": "src.screenshot", "qualname": "image.kind", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image.n", "modulename": "src.screenshot", "qualname": "image.n", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.image.data", "modulename": "src.screenshot", "qualname": "image.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "src.screenshot.serialize", "modulename": "src.screenshot", "qualname": "serialize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">quality</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.screenshot.bgr_to_rgb", "modulename": "src.screenshot", "qualname": "bgr_to_rgb", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>data</code> A flat bytearray in BGR format.</li>\n</ul>\n\n<p>Swap the BGR values to RGB in a flat bytearray.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.screenshot.take_screenshot", "modulename": "src.screenshot", "qualname": "take_screenshot", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>container</code> The container object to take a screenshot of.</li>\n<li><code>output_file</code> The file path to save the screenshot to.</li>\n<li><code>quality</code> The quality of the JPG image (0-100).</li>\n</ul>\n\n<p>Take a screenshot of a container using the LVGL snapshot API and save it to a JPG file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">quality</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.screenshot_v2", "modulename": "src.screenshot_v2", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.screenshot_v2.bgr_to_rgb", "modulename": "src.screenshot_v2", "qualname": "bgr_to_rgb", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>data</code> A flat bytearray in BGR format.</li>\n</ul>\n\n<p>Swap the BGR values to RGB in a flat bytearray.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.screenshot_v2.take_screenshot", "modulename": "src.screenshot_v2", "qualname": "take_screenshot", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>output_file</code> The file path to save the screenshot to.</li>\n<li><code>quality</code> The quality of the JPG image (0-100).</li>\n</ul>\n\n<p>Take a screenshot of a container using the LVGL snapshot API and save it to a JPG file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">quality</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.ui", "modulename": "src.ui", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.ui.UI", "modulename": "src.ui", "qualname": "UI", "kind": "class", "doc": "<p>Custom dictionary class for UI metadata.</p>\n\n<p><strong>Keys:</strong></p>\n\n<ul>\n<li><code>width</code>: Width of the UI.</li>\n<li><code>height</code>: Height of the UI.</li>\n<li><code>count</code>: Number of objects in the UI.</li>\n<li><code>objects</code>: List of objects in the UI.</li>\n</ul>\n", "bases": "builtins.dict"}, {"fullname": "src.ui.UI.verify_objects", "modulename": "src.ui", "qualname": "UI.verify_objects", "kind": "function", "doc": "<p><strong>Raises</strong>:</p>\n\n<ul>\n<li><code>KeyError</code> If any object is missing a required key.</li>\n</ul>\n\n<p>Verify that all objects have the required keys.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.widget", "modulename": "src.widget", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.widget.randomize_state", "modulename": "src.widget", "qualname": "randomize_state", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>widget</code> The widget to randomize the state of.</li>\n</ul>\n\n<p><strong>Raises</strong>:</p>\n\n<ul>\n<li><code>AttributeError</code> If the widget does not have a 'state' property.</li>\n</ul>\n\n<p>Randomize the state of a widget.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;button&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Button&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;state&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;focused&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.obj&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102352&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_arc", "modulename": "src.widget", "qualname": "create_arc", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the arc widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.arc</code> The created arc widget.</li>\n</ul>\n\n<p>Create an arc widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;arc&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;mode&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;normal&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_max&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_min&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;rotation&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;angle_range&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">360</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.arc&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991102672&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_bar", "modulename": "src.widget", "qualname": "create_bar", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the bar widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.bar</code> The created bar widget.</li>\n</ul>\n\n<p>Create a bar widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_min&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_max&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">50</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.bar&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991103184&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_button", "modulename": "src.widget", "qualname": "create_button", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the button widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.button</code> The created button widget.</li>\n</ul>\n\n<p>Create a button widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;button&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Button&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;symbol&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;OK&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.button&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991034128&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_buttonmatrix", "modulename": "src.widget", "qualname": "create_buttonmatrix", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the buttonmatrix widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.buttonmatrix</code> The created buttonmatrix widget.</li>\n</ul>\n\n<p>Create a buttonmatrix widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;buttonmatrix&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;map&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;B&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;E&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;F&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;G&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;H&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;I&quot;</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.buttonmatrix&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140129124703760&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_calendar", "modulename": "src.widget", "qualname": "create_calendar", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the calendar widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.calendar</code> The created calendar widget.</li>\n</ul>\n\n<p><strong>Raises</strong>:</p>\n\n<ul>\n<li><code>ValueError</code> If the date dictionary format is invalid (missing 'year', 'month', 'day' keys).</li>\n<li><code>ValueError</code> If the date_highlights list format is invalid.</li>\n</ul>\n\n<p>Create a calendar widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;calendar&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;current_date&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;year&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;month&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;day&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;showed_date&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">&quot;year&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;month&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;date_highlights&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"nt\">&quot;year&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;month&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">&quot;day&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.calendar&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991148816&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_canvas", "modulename": "src.widget", "qualname": "create_canvas", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the canvas widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.canvas</code> The created canvas widget.</li>\n</ul>\n\n<p>Create a canvas widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.canvas&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991034384&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_chart", "modulename": "src.widget", "qualname": "create_chart", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the chart widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.chart</code> The created chart widget.</li>\n</ul>\n\n<p>Create a chart widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.chart&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128993657168&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_checkbox", "modulename": "src.widget", "qualname": "create_checkbox", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the checkbox widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.checkbox</code> The created checkbox widget.</li>\n</ul>\n\n<p>Create a checkbox widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;checkbox&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;state&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;checked&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.checkbox&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991262096&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_dropdown", "modulename": "src.widget", "qualname": "create_dropdown", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the dropdown widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.dropdown</code> The created dropdown widget.</li>\n</ul>\n\n<p>Create a dropdown widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;dropdown&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;entries&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;Option 1&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;Option 2&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;Option 3&quot;</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.dropdown&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991267344&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_image", "modulename": "src.widget", "qualname": "create_image", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the image widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.image</code> The created image widget.</li>\n</ul>\n\n<p>Create an image widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.image&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991272528&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_imagebutton", "modulename": "src.widget", "qualname": "create_imagebutton", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the imagebutton widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.imagebutton</code> The created imagebutton widget.</li>\n</ul>\n\n<p>Create an imagebutton widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.imagebutton&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991148944&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_keyboard", "modulename": "src.widget", "qualname": "create_keyboard", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the keyboard widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.keyboard</code> The created keyboard widget.</li>\n</ul>\n\n<p>Create a keyboard widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.keyboard&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991315664&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_label", "modulename": "src.widget", "qualname": "create_label", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the label widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.label</code> The created label widget.</li>\n</ul>\n\n<p>Create a label widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;label&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Hello, World!&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.label&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991320848&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_led", "modulename": "src.widget", "qualname": "create_led", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the led widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.led</code> The created led widget.</li>\n</ul>\n\n<p>Create an led widget from a JSON element. <strong>(visually broken since we do nothing functional with it)</strong></p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;led&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;brightness&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.led&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991326032&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_line", "modulename": "src.widget", "qualname": "create_line", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the line widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.line</code> The created line widget.</li>\n</ul>\n\n<p>Create a line widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.line&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991331280&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_list", "modulename": "src.widget", "qualname": "create_list", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the list widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.list</code> The created list widget.</li>\n</ul>\n\n<p>Create a list widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.list&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991336464&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_menu", "modulename": "src.widget", "qualname": "create_menu", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the menu widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.menu</code> The created menu widget.</li>\n</ul>\n\n<p>Create a menu widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.menu&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991341648&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_messagebox", "modulename": "src.widget", "qualname": "create_messagebox", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the messagebox widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.msgbox</code> The created messagebox widget.</li>\n</ul>\n\n<p>Create a messagebox widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.msgbox&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991363280&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_roller", "modulename": "src.widget", "qualname": "create_roller", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the roller widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.roller</code> The created roller widget.</li>\n</ul>\n\n<p>Create a roller widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;roller&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;entries&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;Option 1&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;Option 2&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;Option 3&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;mode&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;infinite&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;visible_rows&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.roller&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991368464&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_scale", "modulename": "src.widget", "qualname": "create_scale", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the scale widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.scale</code> The created scale widget.</li>\n</ul>\n\n<p>Create a scale widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;scale&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;mode&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;horizontal_bottom&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;show_label&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;total_ticks&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;major_ticks&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;major_range&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;minor_range&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;sections&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;labels&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;B&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;C&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;E&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;F&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;G&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;H&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;I&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;J&quot;</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.scale&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991373648&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_slider", "modulename": "src.widget", "qualname": "create_slider", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the slider widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.slider</code> The created slider widget.</li>\n</ul>\n\n<p>Create a slider widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;slider&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_min&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_max&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">50</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.slider&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991378832&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_spangroup", "modulename": "src.widget", "qualname": "create_spangroup", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the spangroup widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.spangroup</code> The created spangroup widget.</li>\n</ul>\n\n<p>Create a spangroup widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.spangroup&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991384080&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_spinbox", "modulename": "src.widget", "qualname": "create_spinbox", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the spinbox widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.spinbox</code> The created spinbox widget.</li>\n</ul>\n\n<p>Create a spinbox widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;spinbox&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_min&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;range_max&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;step&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">50</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.spinbox&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991389200&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_spinner", "modulename": "src.widget", "qualname": "create_spinner", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the spinner widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.spinner</code> The created spinner widget.</li>\n</ul>\n\n<p>Create a spinner widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.spinner&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991394384&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_switch", "modulename": "src.widget", "qualname": "create_switch", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the switch widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.switch</code> The created switch widget.</li>\n</ul>\n\n<p>Create a switch widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;switch&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;state&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;checked&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.switch&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128993657232&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_table", "modulename": "src.widget", "qualname": "create_table", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the table widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.table</code> The created table widget.</li>\n</ul>\n\n<p>Create a table widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;table&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;column_count&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;row_count&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;column_widths&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">50</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">150</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;cell_contents&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;A1&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;B1&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;C1&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;A2&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;B2&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;C2&quot;</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"p\">[</span><span class=\"s2\">&quot;A3&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;B3&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">&quot;C3&quot;</span><span class=\"p\">]</span>\n<span class=\"w\">        </span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.table&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140129180690896&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_tabview", "modulename": "src.widget", "qualname": "create_tabview", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the tabview widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.tabview</code> The created tabview widget.</li>\n</ul>\n\n<p>Create a tabview widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.tabview&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991442576&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_textarea", "modulename": "src.widget", "qualname": "create_textarea", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the textarea widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.textarea</code> The created textarea widget.</li>\n</ul>\n\n<p>Create a textarea widget from a JSON element.</p>\n\n<p><strong>Example</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;textarea&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;options&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;Hello, World!&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.textarea&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991447824&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_tileview", "modulename": "src.widget", "qualname": "create_tileview", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the tileview widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.tileview</code> The created tileview widget.</li>\n</ul>\n\n<p>Create a tileview widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.tileview&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991453008&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.create_window", "modulename": "src.widget", "qualname": "create_window", "kind": "function", "doc": "<p><strong>Params</strong></p>\n\n<ul>\n<li><code>element</code> The JSON element to create the window widget from.</li>\n</ul>\n\n<p><strong>Returns</strong></p>\n\n<ul>\n<li><code>lv.win</code> The created window widget.</li>\n</ul>\n\n<p>Create a window widget from a JSON element. <strong>(not implemented yet)</strong></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">element</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">MagicMock</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;mock.win&#39;</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">&#39;140128991458192&#39;</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "src.widget.widget_mapping", "modulename": "src.widget", "qualname": "widget_mapping", "kind": "variable", "doc": "<p>A mapping of widget types to their respective creation methods</p>\n", "default_value": "{&#x27;arc&#x27;: &lt;function create_arc&gt;, &#x27;bar&#x27;: &lt;function create_bar&gt;, &#x27;button&#x27;: &lt;function create_button&gt;, &#x27;buttonmatrix&#x27;: &lt;function create_buttonmatrix&gt;, &#x27;calendar&#x27;: &lt;function create_calendar&gt;, &#x27;canvas&#x27;: &lt;function create_canvas&gt;, &#x27;chart&#x27;: &lt;function create_chart&gt;, &#x27;checkbox&#x27;: &lt;function create_checkbox&gt;, &#x27;dropdown&#x27;: &lt;function create_dropdown&gt;, &#x27;image&#x27;: &lt;function create_image&gt;, &#x27;imagebutton&#x27;: &lt;function create_imagebutton&gt;, &#x27;keyboard&#x27;: &lt;function create_keyboard&gt;, &#x27;label&#x27;: &lt;function create_label&gt;, &#x27;led&#x27;: &lt;function create_led&gt;, &#x27;line&#x27;: &lt;function create_line&gt;, &#x27;list&#x27;: &lt;function create_list&gt;, &#x27;menu&#x27;: &lt;function create_menu&gt;, &#x27;messagebox&#x27;: &lt;function create_messagebox&gt;, &#x27;roller&#x27;: &lt;function create_roller&gt;, &#x27;scale&#x27;: &lt;function create_scale&gt;, &#x27;slider&#x27;: &lt;function create_slider&gt;, &#x27;spangroup&#x27;: &lt;function create_spangroup&gt;, &#x27;spinbox&#x27;: &lt;function create_spinbox&gt;, &#x27;spinner&#x27;: &lt;function create_spinner&gt;, &#x27;switch&#x27;: &lt;function create_switch&gt;, &#x27;table&#x27;: &lt;function create_table&gt;, &#x27;tabview&#x27;: &lt;function create_tabview&gt;, &#x27;textarea&#x27;: &lt;function create_textarea&gt;, &#x27;tileview&#x27;: &lt;function create_tileview&gt;, &#x27;window&#x27;: &lt;function create_window&gt;}"}, {"fullname": "src.yolo", "modulename": "src.yolo", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "src.yolo.pdoc", "modulename": "src.yolo", "qualname": "pdoc", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;write_yolo_pixel&#x27;: &quot;\\n**Params:**\\n- `ui` The UI object.\\n- `output_file` The file path to save the YOLO .txt file to.\\n\\nThis function writes the .txt file in the YOLO format using pixel values, with the widget&#x27;s bounding boxes and class labels.\\n&quot;, &#x27;write_yolo_normalized&#x27;: &quot;\\n**Params:**\\n- `ui` The UI object.\\n- `output_file` The file path to save the YOLO .txt file to.\\n\\nThis function writes the .txt file in the YOLO format using normalized values, with the widget&#x27;s bounding boxes and class labels.\\n&quot;}"}, {"fullname": "src.yolo.write_yolo_pixel", "modulename": "src.yolo", "qualname": "write_yolo_pixel", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>ui</code> The UI object.</li>\n<li><code>output_file</code> The file path to save the YOLO .txt file to.</li>\n</ul>\n\n<p>This function writes the .txt file in the YOLO format using pixel values, with the widget's bounding boxes and class labels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ui</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">UI</span>, </span><span class=\"param\"><span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "src.yolo.write_yolo_normalized", "modulename": "src.yolo", "qualname": "write_yolo_normalized", "kind": "function", "doc": "<p><strong>Params:</strong></p>\n\n<ul>\n<li><code>ui</code> The UI object.</li>\n<li><code>output_file</code> The file path to save the YOLO .txt file to.</li>\n</ul>\n\n<p>This function writes the .txt file in the YOLO format using normalized values, with the widget's bounding boxes and class labels.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">ui</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">ui</span><span class=\"o\">.</span><span class=\"n\">UI</span>, </span><span class=\"param\"><span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();